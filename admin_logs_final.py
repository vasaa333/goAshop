#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –±–æ—Ç–∞
"""

import os
import sqlite3
from datetime import datetime
from telebot import types


DATABASE = os.getenv('DATABASE', 'bot.db')
LOG_FILE = 'bot.log'


def register_admin_logs_handlers(bot, user_states, user_data):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ª–æ–≥–æ–≤"""
    
    ADMIN_ID = int(os.getenv('ADMIN_ID', '0'))
    
    def is_admin(user_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        return user_id == ADMIN_ID
    
    
    @bot.callback_query_handler(func=lambda call: call.data == "admin_logs" and is_admin(call.from_user.id))
    def admin_logs_callback(call):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ª–æ–≥–æ–≤"""
        bot.answer_callback_query(call.id, "üìã –õ–æ–≥–∏ –±–æ—Ç–∞")
        show_logs_menu(call.message)
    
    
    def show_logs_menu(message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ª–æ–≥–æ–≤"""
        markup = types.InlineKeyboardMarkup(row_width=1)
        markup.add(
            types.InlineKeyboardButton("üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 70 —Å—Ç—Ä–æ–∫", callback_data="logs_view_70"),
            types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤", callback_data="logs_stats"),
            types.InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏", callback_data="logs_clear"),
            types.InlineKeyboardButton("‚óÄÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
        )
        
        bot.edit_message_text(
            "üìã *–õ–æ–≥–∏ –±–æ—Ç–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            message.chat.id,
            message.message_id,
            parse_mode="Markdown",
            reply_markup=markup
        )
    
    
    @bot.callback_query_handler(func=lambda call: call.data == "logs_view_70" and is_admin(call.from_user.id))
    def logs_view_70_callback(call):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 70 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤"""
        bot.answer_callback_query(call.id, "üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤...")
        
        try:
            if not os.path.exists(LOG_FILE):
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
                
                bot.edit_message_text(
                    "üìÑ *–õ–æ–≥–∏ –±–æ—Ç–∞*\n\n‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    call.message.chat.id,
                    call.message.message_id,
                    parse_mode="Markdown",
                    reply_markup=markup
                )
                return
            
            # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 70 —Å—Ç—Ä–æ–∫
            with open(LOG_FILE, 'r', encoding='utf-8') as f:
                lines = f.readlines()
                last_70 = lines[-70:] if len(lines) >= 70 else lines
            
            if not last_70:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
                
                bot.edit_message_text(
                    "üìÑ *–õ–æ–≥–∏ –±–æ—Ç–∞*\n\n‚ùå –õ–æ–≥–∏ –ø—É—Å—Ç—ã.",
                    call.message.chat.id,
                    call.message.message_id,
                    parse_mode="Markdown",
                    reply_markup=markup
                )
                return
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏ –º–µ—Ç–æ–¥–æ–º —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            log_text = ''.join(last_70)
            
            # Telegram –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è (4096 —Å–∏–º–≤–æ–ª–æ–≤)
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            max_len = 3500  # –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å
            
            if len(log_text) > max_len:
                log_text = "..." + log_text[-max_len:]
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏ –º–µ—Ç–æ–¥–æ–º —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (blockquote –≤ Markdown)
            formatted_log = f"üìÑ *–ü–æ—Å–ª–µ–¥–Ω–∏–µ 70 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:*\n\n```\n{log_text}\n```"
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="logs_view_70"))
            markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
            
            bot.edit_message_text(
                formatted_log,
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown",
                reply_markup=markup
            )
            
        except Exception as e:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
            
            bot.edit_message_text(
                f"üìÑ *–õ–æ–≥–∏ –±–æ—Ç–∞*\n\n‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤:\n`{str(e)}`",
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown",
                reply_markup=markup
            )
    
    
    @bot.callback_query_handler(func=lambda call: call.data == "logs_stats" and is_admin(call.from_user.id))
    def logs_stats_callback(call):
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤"""
        bot.answer_callback_query(call.id)
        
        try:
            if not os.path.exists(LOG_FILE):
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
                
                bot.edit_message_text(
                    "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤*\n\n‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    call.message.chat.id,
                    call.message.message_id,
                    parse_mode="Markdown",
                    reply_markup=markup
                )
                return
            
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ —Å–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            with open(LOG_FILE, 'r', encoding='utf-8') as f:
                lines = f.readlines()
            
            total_lines = len(lines)
            errors = sum(1 for line in lines if 'ERROR' in line)
            warnings = sum(1 for line in lines if 'WARNING' in line)
            info = sum(1 for line in lines if 'INFO' in line)
            
            # –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            file_size = os.path.getsize(LOG_FILE)
            size_mb = file_size / (1024 * 1024)
            
            text = f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤*\n\n"
            text += f"üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {total_lines}\n"
            text += f"‚ùå –û—à–∏–±–æ–∫ (ERROR): {errors}\n"
            text += f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (WARNING): {warnings}\n"
            text += f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö (INFO): {info}\n"
            text += f"üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_mb:.2f} MB\n"
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
            
            bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown",
                reply_markup=markup
            )
            
        except Exception as e:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
            
            bot.edit_message_text(
                f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤*\n\n‚ùå –û—à–∏–±–∫–∞: `{str(e)}`",
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown",
                reply_markup=markup
            )
    
    
    @bot.callback_query_handler(func=lambda call: call.data == "logs_clear" and is_admin(call.from_user.id))
    def logs_clear_callback(call):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤"""
        bot.answer_callback_query(call.id)
        
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton("‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å", callback_data="logs_clear_confirm"),
            types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_logs")
        )
        
        bot.edit_message_text(
            "üóë *–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤*\n\n"
            "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –ª–æ–≥–æ–≤?\n"
            "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!",
            call.message.chat.id,
            call.message.message_id,
            parse_mode="Markdown",
            reply_markup=markup
        )
    
    
    @bot.callback_query_handler(func=lambda call: call.data == "logs_clear_confirm" and is_admin(call.from_user.id))
    def logs_clear_confirm_callback(call):
        """–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤"""
        bot.answer_callback_query(call.id, "üóë –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤...")
        
        try:
            if os.path.exists(LOG_FILE):
                # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª
                with open(LOG_FILE, 'w', encoding='utf-8') as f:
                    f.write(f"{datetime.now().isoformat()} - –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n")
                
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
                
                bot.edit_message_text(
                    "üóë *–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤*\n\n‚úÖ –õ–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã!",
                    call.message.chat.id,
                    call.message.message_id,
                    parse_mode="Markdown",
                    reply_markup=markup
                )
            else:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
                
                bot.edit_message_text(
                    "üóë *–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤*\n\n‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    call.message.chat.id,
                    call.message.message_id,
                    parse_mode="Markdown",
                    reply_markup=markup
                )
                
        except Exception as e:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_logs"))
            
            bot.edit_message_text(
                f"üóë *–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤*\n\n‚ùå –û—à–∏–±–∫–∞: `{str(e)}`",
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown",
                reply_markup=markup
            )
